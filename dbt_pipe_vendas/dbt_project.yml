
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_pipe_vendas'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_pipe_vendas'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  dbt_pipe_vendas:
    raw:
      +materialized: table  # Esta linha define a camada raw
    trusted:  # Definindo a camada trusted, que vai conter os dados transformados
      stg_products:  # Nome do modelo stg_products na camada trusted
        +materialized: table  # A materialização é uma tabela
        +partition_by:
          field: dt_processamento  # Campo de particionamento para a trusted
          data_type: datetime  # Tipo de dados de particionamento
        +cluster_by:
          - category  # Clusterizando os dados pela categoria
